/* Polyhedra Library Data: Archimedean
 *
 * @copyright Maikel de Vries, 2020
 * @license https://www.gnu.org/licenses/gpl-3.0.en.html
*/

// Source: https://en.wikipedia.org/wiki/Truncated_tetrahedron
VERTICES_TRUNCATED_TETRAHEDRON = [
	[+3/sqrt(8), +1/sqrt(8), +1/sqrt(8)],
	[+1/sqrt(8), +3/sqrt(8), +1/sqrt(8)],
	[+1/sqrt(8), +1/sqrt(8), +3/sqrt(8)],
	[-3/sqrt(8), -1/sqrt(8), +1/sqrt(8)],
	[-1/sqrt(8), -3/sqrt(8), +1/sqrt(8)],
	[-1/sqrt(8), -1/sqrt(8), +3/sqrt(8)],
	[-3/sqrt(8), +1/sqrt(8), -1/sqrt(8)],
	[-1/sqrt(8), +3/sqrt(8), -1/sqrt(8)],
	[-1/sqrt(8), +1/sqrt(8), -3/sqrt(8)],
	[+3/sqrt(8), -1/sqrt(8), -1/sqrt(8)],
	[+1/sqrt(8), -3/sqrt(8), -1/sqrt(8)],
	[+1/sqrt(8), -1/sqrt(8), -3/sqrt(8)]
];
FACES_TRUNCATED_TETRAHEDRON = [
	[0, 2, 1], [3, 5, 4], [6, 8, 7], [9, 11, 10],
	[2, 0, 9, 10, 4, 5], [1, 7, 8, 11, 9, 0],
	[7, 1, 2, 5, 3, 6], [3, 4, 10, 11, 8, 6]
];
CIRCUMRADIUS_TRUNCATED_TETRAHEDRON = sqrt(11 / 8);

// Source: https://en.wikipedia.org/wiki/Cuboctahedron
VERTICES_CUBOCTAHEDRON = [
	[+1/sqrt(2), +1/sqrt(2), 0],
	[+1/sqrt(2), -1/sqrt(2), 0],
	[-1/sqrt(2), +1/sqrt(2), 0],
	[-1/sqrt(2), -1/sqrt(2), 0],
	[+1/sqrt(2), 0, +1/sqrt(2)],
	[+1/sqrt(2), 0, -1/sqrt(2)],
	[-1/sqrt(2), 0, +1/sqrt(2)],
	[-1/sqrt(2), 0, -1/sqrt(2)],
	[0, +1/sqrt(2), +1/sqrt(2)],
	[0, +1/sqrt(2), -1/sqrt(2)],
	[0, -1/sqrt(2), +1/sqrt(2)],
	[0, -1/sqrt(2), -1/sqrt(2)]
];
FACES_CUBOCTAHEDRON = [
	[6, 8, 4, 10], [4, 0, 5, 1], [3, 10, 1, 11],
	[8, 2, 9, 0], [6, 3, 7, 2], [7, 11, 5, 9],
	
	[8, 6, 2], [4, 8, 0], [10, 4, 1], [6, 10, 3],
	[0, 9, 5], [1, 5, 11], [3, 11, 7], [2, 7, 9]
];
CIRCUMRADIUS_CUBOCTAHEDRON = 1;

// Source: https://en.wikipedia.org/wiki/Truncated_cube
VERTICES_TRUNCATED_CUBE = [
	[+(sqrt(2) - 1), +1, +1],
	[+(sqrt(2) - 1), +1, -1],
	[+(sqrt(2) - 1), -1, +1],
	[+(sqrt(2) - 1), -1, -1],
	[-(sqrt(2) - 1), +1, +1],
	[-(sqrt(2) - 1), +1, -1],
	[-(sqrt(2) - 1), -1, +1],
	[-(sqrt(2) - 1), -1, -1],

	[+1, +(sqrt(2) - 1), +1],
	[+1, +(sqrt(2) - 1), -1],
	[+1, -(sqrt(2) - 1), +1],
	[+1, -(sqrt(2) - 1), -1],
	[-1, +(sqrt(2) - 1), +1],
	[-1, +(sqrt(2) - 1), -1],
	[-1, -(sqrt(2) - 1), +1],
	[-1, -(sqrt(2) - 1), -1],

	[+1, +1, +(sqrt(2) - 1)],
	[+1, +1, -(sqrt(2) - 1)],
	[+1, -1, +(sqrt(2) - 1)],
	[+1, -1, -(sqrt(2) - 1)],
	[-1, +1, +(sqrt(2) - 1)],
	[-1, +1, -(sqrt(2) - 1)],
	[-1, -1, +(sqrt(2) - 1)],
	[-1, -1, -(sqrt(2) - 1)],
] / (2 * sqrt(2) - 2);
FACES_TRUNCATED_CUBE = [
	[4, 0, 8, 10, 2, 6, 14, 12], [0, 4, 20, 21, 5, 1, 17, 16], [1, 5, 13, 15, 7, 3, 11, 9], [2, 18, 19, 3, 7, 23, 22, 6], [10, 8, 16, 17, 9, 11, 19, 18], [12, 14, 22, 23, 15, 13, 21, 20],
		
	[18, 2, 10], [14, 6, 22], [4, 12, 20], [8, 0, 16], [19, 11, 3], [23, 7, 15], [21, 13, 5], [17, 1, 9]
];
CIRCUMRADIUS_TRUNCATED_CUBE = sqrt(7 + 4 * sqrt(2)) / 2;

// Source: https://en.wikipedia.org/wiki/Truncated_octahedron
VERTICES_TRUNCATED_OCTAHEDRON = [
	[0, +1/sqrt(2), +2/sqrt(2)],
	[0, +1/sqrt(2), -2/sqrt(2)],
	[0, -1/sqrt(2), +2/sqrt(2)],
	[0, -1/sqrt(2), -2/sqrt(2)],

	[0, +2/sqrt(2), +1/sqrt(2)],
	[0, +2/sqrt(2), -1/sqrt(2)],
	[0, -2/sqrt(2), +1/sqrt(2)],
	[0, -2/sqrt(2), -1/sqrt(2)],
	
	[+1/sqrt(2), 0, +2/sqrt(2)],
	[+1/sqrt(2), 0, -2/sqrt(2)],
	[-1/sqrt(2), 0, +2/sqrt(2)],
	[-1/sqrt(2), 0, -2/sqrt(2)],

	[+2/sqrt(2), 0, +1/sqrt(2)],
	[+2/sqrt(2), 0, -1/sqrt(2)],
	[-2/sqrt(2), 0, +1/sqrt(2)],
	[-2/sqrt(2), 0, -1/sqrt(2)],

	[+1/sqrt(2), +2/sqrt(2), 0],
	[+1/sqrt(2), -2/sqrt(2), 0],
	[-1/sqrt(2), +2/sqrt(2), 0],
	[-1/sqrt(2), -2/sqrt(2), 0],
	
	[+2/sqrt(2), +1/sqrt(2), 0],
	[+2/sqrt(2), -1/sqrt(2), 0],
	[-2/sqrt(2), +1/sqrt(2), 0],
	[-2/sqrt(2), -1/sqrt(2), 0]
];
FACES_TRUNCATED_OCTAHEDRON = [
	[22, 14, 23, 15], [12, 20, 13, 21], [4, 18, 5, 16],
	[6, 17, 7, 19], [0, 8, 2, 10], [1, 11, 3, 9],
	
	[6, 2, 8, 12, 21, 17], [2, 6, 19, 23, 14, 10], [0, 4, 16, 20, 12, 8], [11, 15, 23, 19, 7, 3],
	[1, 9, 13, 20, 16, 5], [14, 22, 18, 4, 0, 10], [1, 5, 18, 22, 15, 11], [3, 7, 17, 21, 13, 9]
];
CIRCUMRADIUS_TRUNCATED_OCTAHEDRON = sqrt(10) / 2;

// Source: https://en.wikipedia.org/wiki/Rhombicuboctahedron
VERTICES_RHOMBICUBOCTAHEDRON = [
	[+1/2, +1/2, +(1 + sqrt(2))/2],
	[+1/2, +1/2, -(1 + sqrt(2))/2],
	[+1/2, -1/2, +(1 + sqrt(2))/2],
	[+1/2, -1/2, -(1 + sqrt(2))/2],
	[-1/2, +1/2, +(1 + sqrt(2))/2],
	[-1/2, +1/2, -(1 + sqrt(2))/2],
	[-1/2, -1/2, +(1 + sqrt(2))/2],
	[-1/2, -1/2, -(1 + sqrt(2))/2],

	[+1/2, +(1 + sqrt(2))/2, +1/2],
	[+1/2, +(1 + sqrt(2))/2, -1/2],
	[+1/2, -(1 + sqrt(2))/2, +1/2],
	[+1/2, -(1 + sqrt(2))/2, -1/2],
	[-1/2, +(1 + sqrt(2))/2, +1/2],
	[-1/2, +(1 + sqrt(2))/2, -1/2],
	[-1/2, -(1 + sqrt(2))/2, +1/2],
	[-1/2, -(1 + sqrt(2))/2, -1/2],
	
	[+(1 + sqrt(2))/2, +1/2, +1/2],
	[+(1 + sqrt(2))/2, +1/2, -1/2],
	[+(1 + sqrt(2))/2, -1/2, +1/2],
	[+(1 + sqrt(2))/2, -1/2, -1/2],
	[-(1 + sqrt(2))/2, +1/2, +1/2],
	[-(1 + sqrt(2))/2, +1/2, -1/2],
	[-(1 + sqrt(2))/2, -1/2, +1/2],
	[-(1 + sqrt(2))/2, -1/2, -1/2]
];
FACES_RHOMBICUBOCTAHEDRON = [
	[0, 2, 6, 4], [3, 1, 5, 7], [9, 8, 12, 13],
	[10, 11, 15, 14], [16, 17, 19, 18], [21, 20, 22, 23],
	
	[2, 0, 16, 18], [6, 2, 10, 14], [4, 6, 22, 20], [0, 4, 12, 8],
	[1, 3, 19, 17], [3, 7, 15, 11], [7, 5, 21, 23], [5, 1, 9, 13],
	[19, 11, 10, 18], [8, 9, 17, 16], [13, 12, 20, 21], [14, 15, 23, 22],
	
	[11, 19, 3], [0, 8, 16], [1, 17, 9], [2, 18, 10],
	[4, 20, 12], [5, 13, 21], [6, 14, 22], [7, 23, 15]
];
CIRCUMRADIUS_RHOMBICUBOCTAHEDRON = sqrt(5 + 2 * sqrt(2)) / 2;

// Source: https://en.wikipedia.org/wiki/Truncated_cuboctahedron
VERTICES_TRUNCATED_CUBOCTAHEDRON = [
	[+1/2, +(1 + sqrt(2))/2, +(1/2 + sqrt(2))],
	[+1/2, +(1 + sqrt(2))/2, -(1/2 + sqrt(2))],
	[+1/2, -(1 + sqrt(2))/2, +(1/2 + sqrt(2))],
	[+1/2, -(1 + sqrt(2))/2, -(1/2 + sqrt(2))],
	[-1/2, +(1 + sqrt(2))/2, +(1/2 + sqrt(2))],
	[-1/2, +(1 + sqrt(2))/2, -(1/2 + sqrt(2))],
	[-1/2, -(1 + sqrt(2))/2, +(1/2 + sqrt(2))],
	[-1/2, -(1 + sqrt(2))/2, -(1/2 + sqrt(2))],
	
	[+1/2, +(1/2 + sqrt(2)), +(1 + sqrt(2))/2],
	[+1/2, +(1/2 + sqrt(2)), -(1 + sqrt(2))/2],
	[+1/2, -(1/2 + sqrt(2)), +(1 + sqrt(2))/2],
	[+1/2, -(1/2 + sqrt(2)), -(1 + sqrt(2))/2],
	[-1/2, +(1/2 + sqrt(2)), +(1 + sqrt(2))/2],
	[-1/2, +(1/2 + sqrt(2)), -(1 + sqrt(2))/2],
	[-1/2, -(1/2 + sqrt(2)), +(1 + sqrt(2))/2],
	[-1/2, -(1/2 + sqrt(2)), -(1 + sqrt(2))/2],
	
	[+(1 + sqrt(2))/2, +1/2, +(1/2 + sqrt(2))],
	[+(1 + sqrt(2))/2, +1/2, -(1/2 + sqrt(2))],
	[+(1 + sqrt(2))/2, -1/2, +(1/2 + sqrt(2))],
	[+(1 + sqrt(2))/2, -1/2, -(1/2 + sqrt(2))],
	[-(1 + sqrt(2))/2, +1/2, +(1/2 + sqrt(2))],
	[-(1 + sqrt(2))/2, +1/2, -(1/2 + sqrt(2))],
	[-(1 + sqrt(2))/2, -1/2, +(1/2 + sqrt(2))],
	[-(1 + sqrt(2))/2, -1/2, -(1/2 + sqrt(2))],
	
	[+(1 + sqrt(2))/2, +(1/2 + sqrt(2)), +1/2],
	[+(1 + sqrt(2))/2, +(1/2 + sqrt(2)), -1/2],
	[+(1 + sqrt(2))/2, -(1/2 + sqrt(2)), +1/2],
	[+(1 + sqrt(2))/2, -(1/2 + sqrt(2)), -1/2],
	[-(1 + sqrt(2))/2, +(1/2 + sqrt(2)), +1/2],
	[-(1 + sqrt(2))/2, +(1/2 + sqrt(2)), -1/2],
	[-(1 + sqrt(2))/2, -(1/2 + sqrt(2)), +1/2],
	[-(1 + sqrt(2))/2, -(1/2 + sqrt(2)), -1/2],
	
	[+(1/2 + sqrt(2)), +1/2, +(1 + sqrt(2))/2],
	[+(1/2 + sqrt(2)), +1/2, -(1 + sqrt(2))/2],
	[+(1/2 + sqrt(2)), -1/2, +(1 + sqrt(2))/2],
	[+(1/2 + sqrt(2)), -1/2, -(1 + sqrt(2))/2],
	[-(1/2 + sqrt(2)), +1/2, +(1 + sqrt(2))/2],
	[-(1/2 + sqrt(2)), +1/2, -(1 + sqrt(2))/2],
	[-(1/2 + sqrt(2)), -1/2, +(1 + sqrt(2))/2],
	[-(1/2 + sqrt(2)), -1/2, -(1 + sqrt(2))/2],
	
	[+(1/2 + sqrt(2)), +(1 + sqrt(2))/2, +1/2],
	[+(1/2 + sqrt(2)), +(1 + sqrt(2))/2, -1/2],
	[+(1/2 + sqrt(2)), -(1 + sqrt(2))/2, +1/2],
	[+(1/2 + sqrt(2)), -(1 + sqrt(2))/2, -1/2],
	[-(1/2 + sqrt(2)), +(1 + sqrt(2))/2, +1/2],
	[-(1/2 + sqrt(2)), +(1 + sqrt(2))/2, -1/2],
	[-(1/2 + sqrt(2)), -(1 + sqrt(2))/2, +1/2],
	[-(1/2 + sqrt(2)), -(1 + sqrt(2))/2, -1/2]
	
];
FACES_TRUNCATED_CUBOCTAHEDRON = [
	[0, 16, 18, 2, 6, 22, 20, 4], [32, 40, 41, 33, 35, 43, 42, 34], [36, 38, 46, 47, 39, 37, 45, 44], [8, 12, 28, 29, 13, 9, 25, 24], [14, 10, 26, 27, 11, 15, 31, 30], [1, 5, 21, 23, 7, 3, 19, 17],
	
	[22, 6, 14, 30, 46, 38], [4, 20, 36, 44, 28, 12], [16, 0, 8, 24, 40, 32], [2, 18, 34, 42, 26, 10], [43, 35, 19, 3, 11, 27], [7, 23, 39, 47, 31, 15], [21, 5, 13, 29, 45, 37], [9, 1, 17, 33, 41, 25], 
	
	[6, 2, 10, 14], [20, 22, 38, 36], [0, 4, 12, 8], [18, 16, 32, 34], [43, 27, 26, 42], [46, 30, 31, 47], [40, 24, 25, 41], [44, 45, 29, 28], [9, 13, 5, 1], [37, 39, 23, 21], [15, 11, 3, 7], [35, 33, 17, 19]
];
CIRCUMRADIUS_TRUNCATED_CUBOCTAHEDRON = sqrt(13 + 6 * sqrt(2)) / 2;

// Source: https://en.wikipedia.org/wiki/Snub_cube
CONSTANT_SNUB_CUBE = let (beta = pow(26 + 6 * sqrt(33), 1/3)) sqrt(4 / 3 - 16 / (3 * beta) + 2 * beta / 3);
VERTICES_SNUB_CUBE_LAEVO = [
	// even permutations
	[+1, +1/TRIBONACCI, -TRIBONACCI],
	[+1, -1/TRIBONACCI, +TRIBONACCI],
	[-1, +1/TRIBONACCI, +TRIBONACCI],
	[-1, -1/TRIBONACCI, -TRIBONACCI],
	[-TRIBONACCI, +1, +1/TRIBONACCI],
	[+TRIBONACCI, -1, +1/TRIBONACCI],
	[+TRIBONACCI, +1, -1/TRIBONACCI],
	[-TRIBONACCI, -1, -1/TRIBONACCI],
	[+1/TRIBONACCI, -TRIBONACCI, +1],
	[-1/TRIBONACCI, +TRIBONACCI, +1],
	[+1/TRIBONACCI, +TRIBONACCI, -1],
	[-1/TRIBONACCI, -TRIBONACCI, -1],
	
	// odd permutations
	[+TRIBONACCI, +1/TRIBONACCI, +1],
	[+TRIBONACCI, -1/TRIBONACCI, -1],
	[-TRIBONACCI, +1/TRIBONACCI, -1],
	[-TRIBONACCI, -1/TRIBONACCI, +1],
	[+1/TRIBONACCI, +1, +TRIBONACCI],
	[-1/TRIBONACCI, +1, -TRIBONACCI],
	[+1/TRIBONACCI, -1, -TRIBONACCI],
	[-1/TRIBONACCI, -1, +TRIBONACCI],
	[+1, +TRIBONACCI, +1/TRIBONACCI],
	[+1, -TRIBONACCI, -1/TRIBONACCI],
	[-1, -TRIBONACCI, +1/TRIBONACCI],
	[-1, +TRIBONACCI, -1/TRIBONACCI]
] / CONSTANT_SNUB_CUBE;
VERTICES_SNUB_CUBE_DEXTRO = [
	// even permutations
	[-1, -1/TRIBONACCI, +TRIBONACCI],
	[-1, +1/TRIBONACCI, -TRIBONACCI],
	[+1, -1/TRIBONACCI, -TRIBONACCI],
	[+1, +1/TRIBONACCI, +TRIBONACCI],
	[+TRIBONACCI, -1, -1/TRIBONACCI],
	[-TRIBONACCI, +1, -1/TRIBONACCI],
	[-TRIBONACCI, -1, +1/TRIBONACCI],
	[+TRIBONACCI, +1, +1/TRIBONACCI],
	[-1/TRIBONACCI, +TRIBONACCI, -1],
	[+1/TRIBONACCI, -TRIBONACCI, -1],
	[-1/TRIBONACCI, -TRIBONACCI, +1],
	[+1/TRIBONACCI, +TRIBONACCI, +1],
	
	// odd permutations
	[-TRIBONACCI, -1/TRIBONACCI, -1],
	[-TRIBONACCI, +1/TRIBONACCI, +1],
	[+TRIBONACCI, -1/TRIBONACCI, +1],
	[+TRIBONACCI, +1/TRIBONACCI, -1],
	[-1/TRIBONACCI, -1, -TRIBONACCI],
	[+1/TRIBONACCI, -1, +TRIBONACCI],
	[-1/TRIBONACCI, +1, +TRIBONACCI],
	[+1/TRIBONACCI, +1, -TRIBONACCI],
	[-1, -TRIBONACCI, -1/TRIBONACCI],
	[-1, +TRIBONACCI, +1/TRIBONACCI],
	[+1, +TRIBONACCI, -1/TRIBONACCI],
	[+1, -TRIBONACCI, +1/TRIBONACCI]
] / CONSTANT_SNUB_CUBE;
FACES_SNUB_CUBE_LAEVO = [
	[2, 16, 1, 19], [0, 17, 3, 18], [23, 10, 20, 9], [22, 8, 21, 11], [12, 6, 13, 5], [4, 15, 7, 14],
	[19, 1, 8], [19, 8, 22], [15, 19, 22], [15, 22, 7], [2, 19, 15], [2, 15, 4], [2, 4, 9], [16, 2, 9], [16, 9, 20], [16, 20, 12], [16, 12, 1], [1, 12, 5], [1, 5, 8], [9, 4, 23], [4, 14, 23], [12, 20, 6], [20, 10, 6], [8, 5, 21], [5, 13, 21], [22, 11, 7], [21, 13, 18], [13, 0, 18], [13, 6, 0], [6, 10, 0], [10, 17, 0], [10, 23, 17], [23, 14, 17], [14, 3, 17], [14, 7, 3], [7, 11, 3], [11, 18, 3], [11, 21, 18]
];
FACES_SNUB_CUBE_DEXTRO = [
	[2, 19, 1, 16], [0, 18, 3, 17], [20, 10, 23, 9], [21, 8, 22, 11], [13, 6, 12, 5], [4, 14, 7, 15],
	[19, 8, 1], [19, 22, 8], [15, 22, 19], [15, 7, 22], [2, 15, 19], [2, 4, 15], [2, 9, 4], [16, 9, 2], [16, 20, 9], [16, 12, 20], [16, 1, 12], [1, 5, 12], [1, 8, 5], [9, 23, 4], [4, 23, 14], [12, 6, 20], [20, 6, 10], [8, 21, 5], [5, 21, 13], [22, 7, 11], [21, 18, 13], [13, 18, 0], [13, 0, 6], [6, 0, 10], [10, 0, 17], [10, 17, 23], [23, 17, 14], [14, 17, 3], [14, 3, 7], [7, 3, 11], [11, 3, 18], [11, 18, 21]
];
CIRCUMRADIUS_SNUB_CUBE = sqrt((3 - TRIBONACCI) / (8 - 4 * TRIBONACCI));

// Source: https://en.wikipedia.org/wiki/Icosidodecahedron
VERTICES_ICOSIDODECAHEDRON = [
	[0, 0, +2 * PHI],
	[0, 0, -2 * PHI],
	[0, +2 * PHI, 0],
	[0, -2 * PHI, 0],
	[+2 * PHI, 0, 0],
	[-2 * PHI, 0, 0],

	[+1, +PHI, +PHI*PHI],
	[+1, +PHI, -PHI*PHI],
	[+1, -PHI, +PHI*PHI],
	[+1, -PHI, -PHI*PHI],
	[-1, +PHI, +PHI*PHI],
	[-1, +PHI, -PHI*PHI],
	[-1, -PHI, +PHI*PHI],
	[-1, -PHI, -PHI*PHI],

	[+PHI, +PHI*PHI, +1],
	[+PHI, +PHI*PHI, -1],
	[+PHI, -PHI*PHI, +1],
	[+PHI, -PHI*PHI, -1],
	[-PHI, +PHI*PHI, +1],
	[-PHI, +PHI*PHI, -1],
	[-PHI, -PHI*PHI, +1],
	[-PHI, -PHI*PHI, -1],

	[+PHI*PHI, +1, +PHI],
	[+PHI*PHI, +1, -PHI],
	[+PHI*PHI, -1, +PHI],
	[+PHI*PHI, -1, -PHI],
	[-PHI*PHI, +1, +PHI],
	[-PHI*PHI, +1, -PHI],
	[-PHI*PHI, -1, +PHI],
	[-PHI*PHI, -1, -PHI]
] / 2;
FACES_ICOSIDODECAHEDRON = [
	[6, 0, 10], [0, 8, 12], [2, 15, 14], [2, 18, 19],
	[4, 24, 22], [4, 23, 25], [1, 13, 9], [1, 7, 11],
	[3, 16, 17], [3, 21, 20], [5, 26, 28], [5, 29, 27],
	
	[6, 14, 22], [7, 23, 15], [8, 24, 16], [9, 17, 25],
	[10, 26, 18], [11, 19, 27], [12, 20, 28], [13, 29, 21],
	
	[0, 6, 22, 24, 8], [0, 12, 28, 26, 10], [2, 14, 6, 10, 18], [2, 19, 11, 7, 15],
	[4, 22, 14, 15, 23], [4, 25, 17, 16, 24], [1, 9, 25, 23, 7], [1, 11, 27, 29, 13],
	[3, 20, 12, 8, 16], [3, 17, 9, 13, 21], [5, 27, 19, 18, 26], [5, 28, 20, 21, 29]
];
CIRCUMRADIUS_ICOSIDODECAHEDRON = PHI;

// Source: https://en.wikipedia.org/wiki/Truncated_dodecahedron
VERTICES_TRUNCATED_DODECAHEDRON = [
	[0, +1/PHI, +(2+PHI)],
	[0, +1/PHI, -(2+PHI)],
	[0, -1/PHI, +(2+PHI)],
	[0, -1/PHI, -(2+PHI)],
	
	[+(2+PHI), 0, +1/PHI],
	[+(2+PHI), 0, -1/PHI],
	[-(2+PHI), 0, +1/PHI],
	[-(2+PHI), 0, -1/PHI],
	
	[+1/PHI, +(2+PHI), 0],
	[+1/PHI, -(2+PHI), 0],
	[-1/PHI, +(2+PHI), 0],
	[-1/PHI, -(2+PHI), 0],
	
	[+1/PHI, +PHI, +2*PHI],
	[+1/PHI, +PHI, -2*PHI],
	[+1/PHI, -PHI, +2*PHI],
	[+1/PHI, -PHI, -2*PHI],
	[-1/PHI, +PHI, +2*PHI],
	[-1/PHI, +PHI, -2*PHI],
	[-1/PHI, -PHI, +2*PHI],
	[-1/PHI, -PHI, -2*PHI],
	
	[+2*PHI, +1/PHI, +PHI],
	[+2*PHI, +1/PHI, -PHI],
	[+2*PHI, -1/PHI, +PHI],
	[+2*PHI, -1/PHI, -PHI],
	[-2*PHI, +1/PHI, +PHI],
	[-2*PHI, +1/PHI, -PHI],
	[-2*PHI, -1/PHI, +PHI],
	[-2*PHI, -1/PHI, -PHI],
	
	[+PHI, +2*PHI, +1/PHI],
	[+PHI, +2*PHI, -1/PHI],
	[+PHI, -2*PHI, +1/PHI],
	[+PHI, -2*PHI, -1/PHI],
	[-PHI, +2*PHI, +1/PHI],
	[-PHI, +2*PHI, -1/PHI],
	[-PHI, -2*PHI, +1/PHI],
	[-PHI, -2*PHI, -1/PHI],
	
	[+PHI, +2, +(PHI+1)],
	[+PHI, +2, -(PHI+1)],
	[+PHI, -2, +(PHI+1)],
	[+PHI, -2, -(PHI+1)],
	[-PHI, +2, +(PHI+1)],
	[-PHI, +2, -(PHI+1)],
	[-PHI, -2, +(PHI+1)],
	[-PHI, -2, -(PHI+1)],
	
	[+(PHI+1), +PHI, +2],
	[+(PHI+1), +PHI, -2],
	[+(PHI+1), -PHI, +2],
	[+(PHI+1), -PHI, -2],
	[-(PHI+1), +PHI, +2],
	[-(PHI+1), +PHI, -2],
	[-(PHI+1), -PHI, +2],
	[-(PHI+1), -PHI, -2],
	
	[+2, +(PHI+1), +PHI],
	[+2, +(PHI+1), -PHI],
	[+2, -(PHI+1), +PHI],
	[+2, -(PHI+1), -PHI],
	[-2, +(PHI+1), +PHI],
	[-2, +(PHI+1), -PHI],
	[-2, -(PHI+1), +PHI],
	[-2, -(PHI+1), -PHI]
] / (2 * PHI - 2);
FACES_TRUNCATED_DODECAHEDRON = [
	[2, 0, 12, 36, 44, 20, 22, 46, 38, 14], [2, 18, 42, 50, 26, 24, 48, 40, 16, 0],
[1, 3, 15, 39, 47, 23, 21, 45, 37, 13], [3, 1, 17, 41, 49, 25, 27, 51, 43, 19], [35, 11, 9, 31, 55, 39, 15, 19, 43, 59], [26, 50, 58, 34, 35, 59, 51, 27, 7, 6], [8, 10, 33, 57, 41, 17, 13, 37, 53, 29], [48, 24, 6, 7, 25, 49, 57, 33, 32, 56], [12, 16, 40, 56, 32, 10, 8, 28, 52, 36], [4, 20, 44, 52, 28, 29, 53, 45, 21, 5], [46, 22, 4, 5, 23, 47, 55, 31, 30, 54], [18, 14, 38, 54, 30, 9, 11, 34, 58, 42],

	[2, 14, 18], [0, 16, 12], [6, 24, 26], [40, 48, 56], [44, 36, 52], [20, 4, 22], [5, 21, 23], [38, 46, 54], [50, 42, 58], [34, 11, 35], [51, 59, 43], [7, 27, 25], [57, 49, 41], [32, 33, 10], [28, 8, 29], [53, 37, 45], [30, 31, 9], [55, 47, 39], [15, 3, 19], [13, 17, 1]
];
CIRCUMRADIUS_TRUNCATED_DODECAHEDRON = sqrt(74 + 30 * sqrt(5)) / 4;

// Source: https://en.wikipedia.org/wiki/Truncated_icosahedron
VERTICES_TRUNCATED_ICOSAHEDRON = [
	[0, +1, +3*PHI],
	[0, +1, -3*PHI],
	[0, -1, +3*PHI],
	[0, -1, -3*PHI],

	[+1, +3*PHI, 0],
	[+1, -3*PHI, 0],
	[-1, +3*PHI, 0],
	[-1, -3*PHI, 0],
	
	[+3*PHI, 0, +1],
	[+3*PHI, 0, -1],
	[-3*PHI, 0, +1],
	[-3*PHI, 0, -1],

	[+1, +(2+PHI), +2*PHI],
	[+1, +(2+PHI), -2*PHI],
	[+1, -(2+PHI), +2*PHI],
	[+1, -(2+PHI), -2*PHI],
	[-1, +(2+PHI), +2*PHI],
	[-1, +(2+PHI), -2*PHI],
	[-1, -(2+PHI), +2*PHI],
	[-1, -(2+PHI), -2*PHI],

	[+(2+PHI), +2*PHI, +1],
	[+(2+PHI), +2*PHI, -1],
	[+(2+PHI), -2*PHI, +1],
	[+(2+PHI), -2*PHI, -1],
	[-(2+PHI), +2*PHI, +1],
	[-(2+PHI), +2*PHI, -1],
	[-(2+PHI), -2*PHI, +1],
	[-(2+PHI), -2*PHI, -1],

	[+2*PHI, +1, +(2+PHI)],
	[+2*PHI, +1, -(2+PHI)],
	[+2*PHI, -1, +(2+PHI)],
	[+2*PHI, -1, -(2+PHI)],
	[-2*PHI, +1, +(2+PHI)],
	[-2*PHI, +1, -(2+PHI)],
	[-2*PHI, -1, +(2+PHI)],
	[-2*PHI, -1, -(2+PHI)],

	[+PHI, +2, +pow(PHI,3)],
	[+PHI, +2, -pow(PHI,3)],
	[+PHI, -2, +pow(PHI,3)],
	[+PHI, -2, -pow(PHI,3)],
	[-PHI, +2, +pow(PHI,3)],
	[-PHI, +2, -pow(PHI,3)],
	[-PHI, -2, +pow(PHI,3)],
	[-PHI, -2, -pow(PHI,3)],
	
	[+2, +pow(PHI,3), +PHI],
	[+2, +pow(PHI,3), -PHI],
	[+2, -pow(PHI,3), +PHI],
	[+2, -pow(PHI,3), -PHI],
	[-2, +pow(PHI,3), +PHI],
	[-2, +pow(PHI,3), -PHI],
	[-2, -pow(PHI,3), +PHI],
	[-2, -pow(PHI,3), -PHI],
	
	[+pow(PHI,3), +PHI, +2],
	[+pow(PHI,3), +PHI, -2],
	[+pow(PHI,3), -PHI, +2],
	[+pow(PHI,3), -PHI, -2],
	[-pow(PHI,3), +PHI, +2],
	[-pow(PHI,3), +PHI, -2],
	[-pow(PHI,3), -PHI, +2],
	[-pow(PHI,3), -PHI, -2]
] / 2;
FACES_TRUNCATED_ICOSAHEDRON = [
	[0, 2, 42, 34, 32, 40], [2, 0, 36, 28, 30, 38], [39, 31, 29, 37, 1, 3], [41, 33, 35, 43, 3, 1], [28, 36, 12, 44, 20, 52], [38, 30, 54, 22, 46, 14], [34, 42, 18, 50, 26, 58], [40, 32, 56, 24, 48, 16], [12, 16, 48, 6, 4, 44], [18, 14, 46, 5, 7, 50], [52, 20, 21, 53, 9, 8], [54, 8, 9, 55, 23, 22], [7, 5, 47, 15, 19, 51], [27, 51, 19, 43, 35, 59], [58, 26, 27, 59, 11, 10], [24, 56, 10, 11, 57, 25], [4, 6, 49, 17, 13, 45], [21, 45, 13, 37, 29, 53], [23, 55, 31, 39, 15, 47], [17, 49, 25, 57, 33, 41],

	[0, 40, 16, 12, 36], [2, 38, 14, 18, 42], [30, 28, 52, 8, 54], [32, 34, 58, 10, 56], [43, 19, 15, 39, 3], [1, 37, 13, 17, 41], [55, 9, 53, 29, 31], [57, 11, 59, 35, 33], [48, 24, 25, 49, 6], [44, 4, 45, 21, 20], [46, 22, 23, 47, 5], [27, 26, 50, 7, 51]
];
CIRCUMRADIUS_TRUNCATED_ICOSAHEDRON = sqrt(9 * PHI + 10) / 2;

// Source: https://en.wikipedia.org/wiki/Rhombicosidodecahedron
VERTICES_RHOMBICOSIDODECAHEDRON =
[
	[+1/2, +1/2, +pow(PHI,3)/2],
	[+1/2, +1/2, -pow(PHI,3)/2],
	[+1/2, -1/2, +pow(PHI,3)/2],
	[+1/2, -1/2, -pow(PHI,3)/2],
	[-1/2, +1/2, +pow(PHI,3)/2],
	[-1/2, +1/2, -pow(PHI,3)/2],
	[-1/2, -1/2, +pow(PHI,3)/2],
	[-1/2, -1/2, -pow(PHI,3)/2],
	
	[+1/2, +pow(PHI,3)/2, +1/2],
	[+1/2, +pow(PHI,3)/2, -1/2],
	[+1/2, -pow(PHI,3)/2, +1/2],
	[+1/2, -pow(PHI,3)/2, -1/2],
	[-1/2, +pow(PHI,3)/2, +1/2],
	[-1/2, +pow(PHI,3)/2, -1/2],
	[-1/2, -pow(PHI,3)/2, +1/2],
	[-1/2, -pow(PHI,3)/2, -1/2],
	
	[+pow(PHI,3)/2, +1/2, +1/2],
	[+pow(PHI,3)/2, +1/2, -1/2],
	[+pow(PHI,3)/2, -1/2, +1/2],
	[+pow(PHI,3)/2, -1/2, -1/2],
	[-pow(PHI,3)/2, +1/2, +1/2],
	[-pow(PHI,3)/2, +1/2, -1/2],
	[-pow(PHI,3)/2, -1/2, +1/2],
	[-pow(PHI,3)/2, -1/2, -1/2],
	
	[+pow(PHI,2)/2, +PHI/2, +PHI],
	[+pow(PHI,2)/2, +PHI/2, -PHI],
	[+pow(PHI,2)/2, -PHI/2, +PHI],
	[+pow(PHI,2)/2, -PHI/2, -PHI],
	[-pow(PHI,2)/2, +PHI/2, +PHI],
	[-pow(PHI,2)/2, +PHI/2, -PHI],
	[-pow(PHI,2)/2, -PHI/2, +PHI],
	[-pow(PHI,2)/2, -PHI/2, -PHI],
	
	[+PHI, +pow(PHI,2)/2, +PHI/2],
	[+PHI, +pow(PHI,2)/2, -PHI/2],
	[+PHI, -pow(PHI,2)/2, +PHI/2],
	[+PHI, -pow(PHI,2)/2, -PHI/2],
	[-PHI, +pow(PHI,2)/2, +PHI/2],
	[-PHI, +pow(PHI,2)/2, -PHI/2],
	[-PHI, -pow(PHI,2)/2, +PHI/2],
	[-PHI, -pow(PHI,2)/2, -PHI/2],
	
	[+PHI/2, +PHI, +pow(PHI,2)/2],
	[+PHI/2, +PHI, -pow(PHI,2)/2],
	[+PHI/2, -PHI, +pow(PHI,2)/2],
	[+PHI/2, -PHI, -pow(PHI,2)/2],
	[-PHI/2, +PHI, +pow(PHI,2)/2],
	[-PHI/2, +PHI, -pow(PHI,2)/2],
	[-PHI/2, -PHI, +pow(PHI,2)/2],
	[-PHI/2, -PHI, -pow(PHI,2)/2],
	
	[+(1+PHI/2), 0, +pow(PHI,2)/2],
	[+(1+PHI/2), 0, -pow(PHI,2)/2],
	[-(1+PHI/2), 0, +pow(PHI,2)/2],
	[-(1+PHI/2), 0, -pow(PHI,2)/2],
	
	[+pow(PHI,2)/2, +(1+PHI/2), 0],
	[+pow(PHI,2)/2, -(1+PHI/2), 0],
	[-pow(PHI,2)/2, +(1+PHI/2), 0],
	[-pow(PHI,2)/2, -(1+PHI/2), 0],
	
	[0, +pow(PHI,2)/2, +(1+PHI/2)],
	[0, +pow(PHI,2)/2, -(1+PHI/2)],
	[0, -pow(PHI,2)/2, +(1+PHI/2)],
	[0, -pow(PHI,2)/2, -(1+PHI/2)],
];
FACES_RHOMBICOSIDODECAHEDRON = 
[
	[50, 28, 4, 6, 30], [37, 54, 36, 20, 21], [22, 38, 55, 39, 23], [0, 24, 48, 26, 2], [44, 12, 8, 40, 56], [46, 58, 42, 10, 14], [53, 34, 18, 19, 35], [32, 52, 33, 17, 16], [9, 13, 45, 57, 41], [51, 31, 7, 5, 29], [15, 11, 43, 59, 47], 
	
	[0, 2, 6, 4], [2, 26, 42, 58], [6, 58, 46, 30], [38, 46, 14, 55], [50, 30, 38, 22], [49, 25, 1, 3, 27], [20, 22, 23, 21], [28, 50, 20, 36], [56, 4, 28, 44], [44, 36, 54, 12], [0, 56, 40, 24], [40, 8, 52, 32], [48, 24, 32, 16], [18, 16, 17, 19], [26, 48, 18, 34], [42, 34, 53, 10], [14, 10, 11, 15], [11, 53, 35, 43], [55, 15, 47, 39], [23, 39, 31, 51], [54, 37, 45, 13], [37, 21, 51, 29], [8, 12, 13, 9], [52, 9, 41, 33], [17, 33, 25, 49], [35, 19, 49, 27], [43, 27, 3, 59], [47, 59, 7, 31], [45, 29, 5, 57], [5, 7, 3, 1], [1, 25, 41, 57], 
	
	[0, 4, 56], [6, 2, 58], [30, 46, 38], [26, 34, 42], [10, 53, 11], [48, 16, 18], [24, 40, 32], [52, 8, 9], [12, 54, 13], [44, 28, 36], [50, 22, 20], [21, 23, 51], [55, 14, 15], [35, 27, 43], [19, 17, 49], [33, 41, 25], [57, 5, 1], [3, 7, 59], [47, 31, 39], [45, 37, 29]
];
CIRCUMRADIUS_RHOMBICOSIDODECAHEDRON = sqrt(8 * PHI + 7) / 2;

// Source: https://en.wikipedia.org/wiki/Truncated_icosidodecahedron
VERTICES_TRUNCATED_ICOSIDODECAHEDRON =
[
	[+1/((2*PHI-2)*PHI), +1/((2*PHI-2)*PHI), +(3+PHI)/(2*PHI-2)],
	[+1/((2*PHI-2)*PHI), +1/((2*PHI-2)*PHI), -(3+PHI)/(2*PHI-2)],
	[+1/((2*PHI-2)*PHI), -1/((2*PHI-2)*PHI), +(3+PHI)/(2*PHI-2)],
	[+1/((2*PHI-2)*PHI), -1/((2*PHI-2)*PHI), -(3+PHI)/(2*PHI-2)],
	[-1/((2*PHI-2)*PHI), +1/((2*PHI-2)*PHI), +(3+PHI)/(2*PHI-2)],
	[-1/((2*PHI-2)*PHI), +1/((2*PHI-2)*PHI), -(3+PHI)/(2*PHI-2)],
	[-1/((2*PHI-2)*PHI), -1/((2*PHI-2)*PHI), +(3+PHI)/(2*PHI-2)],
	[-1/((2*PHI-2)*PHI), -1/((2*PHI-2)*PHI), -(3+PHI)/(2*PHI-2)],
	
	[+(3+PHI)/(2*PHI-2), +1/((2*PHI-2)*PHI), +1/((2*PHI-2)*PHI)],
	[+(3+PHI)/(2*PHI-2), +1/((2*PHI-2)*PHI), -1/((2*PHI-2)*PHI)],
	[+(3+PHI)/(2*PHI-2), -1/((2*PHI-2)*PHI), +1/((2*PHI-2)*PHI)],
	[+(3+PHI)/(2*PHI-2), -1/((2*PHI-2)*PHI), -1/((2*PHI-2)*PHI)],
	[-(3+PHI)/(2*PHI-2), +1/((2*PHI-2)*PHI), +1/((2*PHI-2)*PHI)],
	[-(3+PHI)/(2*PHI-2), +1/((2*PHI-2)*PHI), -1/((2*PHI-2)*PHI)],
	[-(3+PHI)/(2*PHI-2), -1/((2*PHI-2)*PHI), +1/((2*PHI-2)*PHI)],
	[-(3+PHI)/(2*PHI-2), -1/((2*PHI-2)*PHI), -1/((2*PHI-2)*PHI)],
	
	[+1/((2*PHI-2)*PHI), +(3+PHI)/(2*PHI-2), +1/((2*PHI-2)*PHI)],
	[+1/((2*PHI-2)*PHI), +(3+PHI)/(2*PHI-2), -1/((2*PHI-2)*PHI)],
	[+1/((2*PHI-2)*PHI), -(3+PHI)/(2*PHI-2), +1/((2*PHI-2)*PHI)],
	[+1/((2*PHI-2)*PHI), -(3+PHI)/(2*PHI-2), -1/((2*PHI-2)*PHI)],
	[-1/((2*PHI-2)*PHI), +(3+PHI)/(2*PHI-2), +1/((2*PHI-2)*PHI)],
	[-1/((2*PHI-2)*PHI), +(3+PHI)/(2*PHI-2), -1/((2*PHI-2)*PHI)],
	[-1/((2*PHI-2)*PHI), -(3+PHI)/(2*PHI-2), +1/((2*PHI-2)*PHI)],
	[-1/((2*PHI-2)*PHI), -(3+PHI)/(2*PHI-2), -1/((2*PHI-2)*PHI)],
	
	[+1/((PHI-1)*PHI), +PHI/(2*PHI-2), +(1+2*PHI)/(2*PHI-2)],
	[+1/((PHI-1)*PHI), +PHI/(2*PHI-2), -(1+2*PHI)/(2*PHI-2)],
	[+1/((PHI-1)*PHI), -PHI/(2*PHI-2), +(1+2*PHI)/(2*PHI-2)],
	[+1/((PHI-1)*PHI), -PHI/(2*PHI-2), -(1+2*PHI)/(2*PHI-2)],
	[-1/((PHI-1)*PHI), +PHI/(2*PHI-2), +(1+2*PHI)/(2*PHI-2)],
	[-1/((PHI-1)*PHI), +PHI/(2*PHI-2), -(1+2*PHI)/(2*PHI-2)],
	[-1/((PHI-1)*PHI), -PHI/(2*PHI-2), +(1+2*PHI)/(2*PHI-2)],
	[-1/((PHI-1)*PHI), -PHI/(2*PHI-2), -(1+2*PHI)/(2*PHI-2)],
	
	[+(1+2*PHI)/(2*PHI-2), +1/((PHI-1)*PHI), +PHI/(2*PHI-2)],
	[+(1+2*PHI)/(2*PHI-2), +1/((PHI-1)*PHI), -PHI/(2*PHI-2)],
	[+(1+2*PHI)/(2*PHI-2), -1/((PHI-1)*PHI), +PHI/(2*PHI-2)],
	[+(1+2*PHI)/(2*PHI-2), -1/((PHI-1)*PHI), -PHI/(2*PHI-2)],
	[-(1+2*PHI)/(2*PHI-2), +1/((PHI-1)*PHI), +PHI/(2*PHI-2)],
	[-(1+2*PHI)/(2*PHI-2), +1/((PHI-1)*PHI), -PHI/(2*PHI-2)],
	[-(1+2*PHI)/(2*PHI-2), -1/((PHI-1)*PHI), +PHI/(2*PHI-2)],
	[-(1+2*PHI)/(2*PHI-2), -1/((PHI-1)*PHI), -PHI/(2*PHI-2)],
	
	[+PHI/(2*PHI-2), +(1+2*PHI)/(2*PHI-2), +1/((PHI-1)*PHI)],
	[+PHI/(2*PHI-2), +(1+2*PHI)/(2*PHI-2), -1/((PHI-1)*PHI)],
	[+PHI/(2*PHI-2), -(1+2*PHI)/(2*PHI-2), +1/((PHI-1)*PHI)],
	[+PHI/(2*PHI-2), -(1+2*PHI)/(2*PHI-2), -1/((PHI-1)*PHI)],
	[-PHI/(2*PHI-2), +(1+2*PHI)/(2*PHI-2), +1/((PHI-1)*PHI)],
	[-PHI/(2*PHI-2), +(1+2*PHI)/(2*PHI-2), -1/((PHI-1)*PHI)],
	[-PHI/(2*PHI-2), -(1+2*PHI)/(2*PHI-2), +1/((PHI-1)*PHI)],
	[-PHI/(2*PHI-2), -(1+2*PHI)/(2*PHI-2), -1/((PHI-1)*PHI)],
	
	[+1/((2*PHI-2)*PHI), +PHI*PHI/(2*PHI-2), +(3*PHI-1)/(2*PHI-2)],
	[+1/((2*PHI-2)*PHI), +PHI*PHI/(2*PHI-2), -(3*PHI-1)/(2*PHI-2)],
	[+1/((2*PHI-2)*PHI), -PHI*PHI/(2*PHI-2), +(3*PHI-1)/(2*PHI-2)],
	[+1/((2*PHI-2)*PHI), -PHI*PHI/(2*PHI-2), -(3*PHI-1)/(2*PHI-2)],
	[-1/((2*PHI-2)*PHI), +PHI*PHI/(2*PHI-2), +(3*PHI-1)/(2*PHI-2)],
	[-1/((2*PHI-2)*PHI), +PHI*PHI/(2*PHI-2), -(3*PHI-1)/(2*PHI-2)],
	[-1/((2*PHI-2)*PHI), -PHI*PHI/(2*PHI-2), +(3*PHI-1)/(2*PHI-2)],
	[-1/((2*PHI-2)*PHI), -PHI*PHI/(2*PHI-2), -(3*PHI-1)/(2*PHI-2)],
	
	[+(3*PHI-1)/(2*PHI-2), +1/((2*PHI-2)*PHI), +PHI*PHI/(2*PHI-2)],
	[+(3*PHI-1)/(2*PHI-2), +1/((2*PHI-2)*PHI), -PHI*PHI/(2*PHI-2)],
	[+(3*PHI-1)/(2*PHI-2), -1/((2*PHI-2)*PHI), +PHI*PHI/(2*PHI-2)],
	[+(3*PHI-1)/(2*PHI-2), -1/((2*PHI-2)*PHI), -PHI*PHI/(2*PHI-2)],
	[-(3*PHI-1)/(2*PHI-2), +1/((2*PHI-2)*PHI), +PHI*PHI/(2*PHI-2)],
	[-(3*PHI-1)/(2*PHI-2), +1/((2*PHI-2)*PHI), -PHI*PHI/(2*PHI-2)],
	[-(3*PHI-1)/(2*PHI-2), -1/((2*PHI-2)*PHI), +PHI*PHI/(2*PHI-2)],
	[-(3*PHI-1)/(2*PHI-2), -1/((2*PHI-2)*PHI), -PHI*PHI/(2*PHI-2)],
	
	[+PHI*PHI/(2*PHI-2), +(3*PHI-1)/(2*PHI-2), +1/((2*PHI-2)*PHI)],
	[+PHI*PHI/(2*PHI-2), +(3*PHI-1)/(2*PHI-2), -1/((2*PHI-2)*PHI)],
	[+PHI*PHI/(2*PHI-2), -(3*PHI-1)/(2*PHI-2), +1/((2*PHI-2)*PHI)],
	[+PHI*PHI/(2*PHI-2), -(3*PHI-1)/(2*PHI-2), -1/((2*PHI-2)*PHI)],
	[-PHI*PHI/(2*PHI-2), +(3*PHI-1)/(2*PHI-2), +1/((2*PHI-2)*PHI)],
	[-PHI*PHI/(2*PHI-2), +(3*PHI-1)/(2*PHI-2), -1/((2*PHI-2)*PHI)],
	[-PHI*PHI/(2*PHI-2), -(3*PHI-1)/(2*PHI-2), +1/((2*PHI-2)*PHI)],
	[-PHI*PHI/(2*PHI-2), -(3*PHI-1)/(2*PHI-2), -1/((2*PHI-2)*PHI)],
	
	[+(2*PHI-1)/(2*PHI-2), +1/(PHI-1), +(2+PHI)/(2*PHI-2)],
	[+(2*PHI-1)/(2*PHI-2), +1/(PHI-1), -(2+PHI)/(2*PHI-2)],
	[+(2*PHI-1)/(2*PHI-2), -1/(PHI-1), +(2+PHI)/(2*PHI-2)],
	[+(2*PHI-1)/(2*PHI-2), -1/(PHI-1), -(2+PHI)/(2*PHI-2)],
	[-(2*PHI-1)/(2*PHI-2), +1/(PHI-1), +(2+PHI)/(2*PHI-2)],
	[-(2*PHI-1)/(2*PHI-2), +1/(PHI-1), -(2+PHI)/(2*PHI-2)],
	[-(2*PHI-1)/(2*PHI-2), -1/(PHI-1), +(2+PHI)/(2*PHI-2)],
	[-(2*PHI-1)/(2*PHI-2), -1/(PHI-1), -(2+PHI)/(2*PHI-2)],
	
	[+(2+PHI)/(2*PHI-2), +(2*PHI-1)/(2*PHI-2), +1/(PHI-1)],
	[+(2+PHI)/(2*PHI-2), +(2*PHI-1)/(2*PHI-2), -1/(PHI-1)],
	[+(2+PHI)/(2*PHI-2), -(2*PHI-1)/(2*PHI-2), +1/(PHI-1)],
	[+(2+PHI)/(2*PHI-2), -(2*PHI-1)/(2*PHI-2), -1/(PHI-1)],
	[-(2+PHI)/(2*PHI-2), +(2*PHI-1)/(2*PHI-2), +1/(PHI-1)],
	[-(2+PHI)/(2*PHI-2), +(2*PHI-1)/(2*PHI-2), -1/(PHI-1)],
	[-(2+PHI)/(2*PHI-2), -(2*PHI-1)/(2*PHI-2), +1/(PHI-1)],
	[-(2+PHI)/(2*PHI-2), -(2*PHI-1)/(2*PHI-2), -1/(PHI-1)],
	
	[+1/(PHI-1), +(2+PHI)/(2*PHI-2), +(2*PHI-1)/(2*PHI-2)],
	[+1/(PHI-1), +(2+PHI)/(2*PHI-2), -(2*PHI-1)/(2*PHI-2)],
	[+1/(PHI-1), -(2+PHI)/(2*PHI-2), +(2*PHI-1)/(2*PHI-2)],
	[+1/(PHI-1), -(2+PHI)/(2*PHI-2), -(2*PHI-1)/(2*PHI-2)],
	[-1/(PHI-1), +(2+PHI)/(2*PHI-2), +(2*PHI-1)/(2*PHI-2)],
	[-1/(PHI-1), +(2+PHI)/(2*PHI-2), -(2*PHI-1)/(2*PHI-2)],
	[-1/(PHI-1), -(2+PHI)/(2*PHI-2), +(2*PHI-1)/(2*PHI-2)],
	[-1/(PHI-1), -(2+PHI)/(2*PHI-2), -(2*PHI-1)/(2*PHI-2)],
	
	[+PHI/(2*PHI-2), +3/(2*PHI-2), +PHI/(PHI-1)],
	[+PHI/(2*PHI-2), +3/(2*PHI-2), -PHI/(PHI-1)],
	[+PHI/(2*PHI-2), -3/(2*PHI-2), +PHI/(PHI-1)],
	[+PHI/(2*PHI-2), -3/(2*PHI-2), -PHI/(PHI-1)],
	[-PHI/(2*PHI-2), +3/(2*PHI-2), +PHI/(PHI-1)],
	[-PHI/(2*PHI-2), +3/(2*PHI-2), -PHI/(PHI-1)],
	[-PHI/(2*PHI-2), -3/(2*PHI-2), +PHI/(PHI-1)],
	[-PHI/(2*PHI-2), -3/(2*PHI-2), -PHI/(PHI-1)],
	
	[+PHI/(PHI-1), +PHI/(2*PHI-2), +3/(2*PHI-2)],
	[+PHI/(PHI-1), +PHI/(2*PHI-2), -3/(2*PHI-2)],
	[+PHI/(PHI-1), -PHI/(2*PHI-2), +3/(2*PHI-2)],
	[+PHI/(PHI-1), -PHI/(2*PHI-2), -3/(2*PHI-2)],
	[-PHI/(PHI-1), +PHI/(2*PHI-2), +3/(2*PHI-2)],
	[-PHI/(PHI-1), +PHI/(2*PHI-2), -3/(2*PHI-2)],
	[-PHI/(PHI-1), -PHI/(2*PHI-2), +3/(2*PHI-2)],
	[-PHI/(PHI-1), -PHI/(2*PHI-2), -3/(2*PHI-2)],
	
	[+3/(2*PHI-2), +PHI/(PHI-1), +PHI/(2*PHI-2)],
	[+3/(2*PHI-2), +PHI/(PHI-1), -PHI/(2*PHI-2)],
	[+3/(2*PHI-2), -PHI/(PHI-1), +PHI/(2*PHI-2)],
	[+3/(2*PHI-2), -PHI/(PHI-1), -PHI/(2*PHI-2)],
	[-3/(2*PHI-2), +PHI/(PHI-1), +PHI/(2*PHI-2)],
	[-3/(2*PHI-2), +PHI/(PHI-1), -PHI/(2*PHI-2)],
	[-3/(2*PHI-2), -PHI/(PHI-1), +PHI/(2*PHI-2)],
	[-3/(2*PHI-2), -PHI/(PHI-1), -PHI/(2*PHI-2)]
];
FACES_TRUNCATED_ICOSIDODECAHEDRON = 
[
	[2, 0, 24, 72, 104, 56, 58, 106, 74, 26], [4, 6, 30, 78, 110, 62, 60, 108, 76, 28], [48, 52, 100, 92, 44, 20, 16, 40, 88, 96], [84, 36, 12, 13, 37, 85, 117, 69, 68, 116], [38, 86, 118, 70, 71, 119, 87, 39, 15, 14], [54, 50, 98, 90, 42, 18, 22, 46, 94, 102], [82, 34, 10, 11, 35, 83, 115, 67, 66, 114], [80, 112, 64, 65, 113, 81, 33, 9, 8, 32], [17, 21, 45, 93, 101, 53, 49, 97, 89, 41], [61, 63, 111, 79, 31, 7, 5, 29, 77, 109], [23, 19, 43, 91, 99, 51, 55, 103, 95, 47], [57, 105, 73, 25, 1, 3, 27, 75, 107, 59],
	
	[6, 2, 26, 50, 54, 30], [74, 106, 82, 114, 90, 98], [42, 66, 67, 43, 19, 18], [110, 78, 102, 94, 118, 86], [70, 46, 22, 23, 47, 71], [60, 62, 38, 14, 12, 36], [0, 4, 28, 52, 48, 24], [100, 76, 108, 84, 116, 92], [104, 72, 96, 88, 112, 80], [58, 56, 32, 8, 10, 34], [13, 15, 39, 63, 61, 37], [87, 119, 95, 103, 79, 111], [115, 83, 107, 75, 99, 91], [11, 9, 33, 57, 59, 35], [64, 40, 16, 17, 41, 65], [20, 44, 68, 69, 45, 21], [117, 85, 109, 77, 101, 93], [53, 29, 5, 1, 25, 49], [7, 31, 55, 51, 27, 3], [113, 89, 97, 73, 105, 81], 
	
	[4, 0, 2, 6], [20, 21, 17, 16], [12, 14, 15, 13], [22, 18, 19, 23], [10, 8, 9, 11], [1, 5, 7, 3], [24, 48, 96, 72], [92, 116, 68, 44], [84, 108, 60, 36], [100, 52, 28, 76], [30, 54, 102, 78], [90, 114, 66, 42], [106, 58, 34, 82], [56, 104, 80, 32], [88, 40, 64, 112], [65, 41, 89, 113], [33, 81, 105, 57], [35, 59, 107, 83], [67, 115, 91, 43], [75, 27, 51, 99], [118, 94, 46, 70], [71, 47, 95, 119], [69, 117,93, 45], [62, 110, 86, 38], [26, 74, 98, 50], [97, 49, 25, 73], [101, 77, 29, 53], [85, 37, 61, 109], [39, 87, 111, 63], [103, 55, 31, 79]
];
CIRCUMRADIUS_TRUNCATED_ICOSIDODECAHEDRON = sqrt(31 + 12 * sqrt(5)) / 2;

// Source: https://en.wikipedia.org/wiki/Snub_dodecahedron
// Source: https://mathworld.wolfram.com/SnubDodecahedron.html
VERTICES_SNUB_DODECAHEDRON_LAEVO =
[
	[-2.050215876504471, -0.643029605914073, +0.175392626961585],
	[+2.050215876504471, -0.643029605914073, -0.175392626961585],
	[-1.645069107445494, +0.643029605914073, +1.236080638790192],
	[+1.645069107445494, +0.643029605914073, -1.236080638790192],
	[-2.092754375489906, +0.330921024729844, +0.398127099310126],
	[+2.092754375489906, +0.330921024729844, -0.398127099310126],
	[-1.332963201807377, +1.646917940690374, -0.398127099310126],
	[+1.332963201807377, +1.646917940690374, +0.398127099310126],
	[-1.825265080808600, -0.330921024729844, +1.098423164412520],
	[+1.825265080808600, -0.330921024729844, -1.098423164412520],
	[-0.626046526341877, +1.746186440985826, -1.098423164412520],
	[+0.626046526341877, +1.746186440985826, +1.098423164412520],
	[-1.062215752565082, +1.454024229338015, +1.185388553785668],
	[+1.062215752565082, +1.454024229338015, -1.185388553785668],
	[-1.932135944910516, +0.847550046789061, -0.442881921642891],
	[+1.932135944910516, +0.847550046789061, +0.442881921642891],
	[-1.144874490434974, -0.847550046789061, +1.618195324206757],
	[+1.144874490434974, -0.847550046789061, -1.618195324206757],
	[-1.581987912359319, -1.454024229338015, -0.175392626961585],
	[+1.581987912359319, -1.454024229338015, +0.175392626961585],
	[-1.057412406163561, +0.374821658114562, -1.840929796555298],
	[+1.057412406163561, +0.374821658114562, +1.840929796555298],
	[-0.439137857559085, -0.374821658114562, -2.077089659743209],
	[+0.439137857559085, -0.374821658114562, +2.077089659743209],
	[-1.562410369575602, -1.249503788463027, +0.803273868369103],
	[+1.562410369575602, -1.249503788463027, -0.803273868369103],
	[-1.863307207721680, -0.728335176957191, -0.803273868369103],
	[+1.863307207721680, -0.728335176957191, +0.803273868369103],
	[-1.700067843953274, +1.249503788463027, +0.442881921642891],
	[+1.700067843953274, +1.249503788463027, -0.442881921642891],
	[-0.728114044042271, -1.646917940690374, +1.185388553785668],
	[+0.728114044042271, -1.646917940690374, -1.185388553785668],
	[-0.265654579615664, -1.746186440985826, -1.236080638790192],
	[+0.265654579615664, -1.746186440985826, +1.236080638790192],
	[-0.759791173682529, -1.977838965420219, -0.398127099310126],
	[+0.759791173682529, -1.977838965420219, +0.398127099310126],
	[-1.199218554466724, -1.415265416255982, -1.098423164412520],
	[+1.199218554466724, -1.415265416255982, +1.098423164412520],
	[-1.790329796607353, +0.192893711352359, -1.185388553785668],
	[+1.790329796607353, +0.192893711352359, +1.185388553785668],
	[-1.306437116715503, -0.567715369466921, -1.618195324206757],
	[+1.306437116715503, -0.567715369466921, +1.618195324206757],
	[-0.853311280897597, +0.728335176957191, +1.840929796555298],
	[+0.853311280897597, +0.728335176957191, -1.840929796555298],
	[-1.379414527829830, +1.103156835071754, -1.236080638790192],
	[+1.379414527829830, +1.103156835071754, +1.236080638790192],
	[-0.105036149036274, +0.567715369466921, -2.077089659743209],
	[+0.105036149036274, +0.567715369466921, +2.077089659743209],
	[-0.468227964145153, +2.097053835252088, -0.175392626961585],
	[+0.468227964145153, +2.097053835252088, +0.175392626961585],
	[-0.300896838146078, +1.977838965420219, +0.803273868369103],
	[+0.300896838146078, +1.977838965420219, -0.803273868369103],
	[-0.161562626280529, +1.415265416255982, +1.618195324206757],
	[+0.161562626280529, +1.415265416255982, -1.618195324206757],
	[-0.544174006595359, -0.192893711352359, +2.077089659743209],
	[+0.544174006595359, -0.192893711352359, -2.077089659743209],
	[-0.232068100957242, -2.097053835252088, +0.442881921642891],
	[+0.232068100957242, -2.097053835252088, -0.442881921642891],
	[-0.204101125265964, -1.103156835071754, +1.840929796555298],
	[+0.204101125265964, -1.103156835071754, -1.840929796555298]
];
VERTICES_SNUB_DODECAHEDRON_DEXTRO = -VERTICES_SNUB_DODECAHEDRON_LAEVO;
FACES_SNUB_DODECAHEDRON_LAEVO = 
[
	[19, 25, 31, 57, 35], [24, 30, 56, 34, 18], [23, 41, 37, 33, 58], [27, 39, 15, 5, 1], [17, 9, 3, 43, 55], [32, 59, 22, 40, 36], [21, 47, 52, 11, 45], [16, 8, 2, 42, 54], [38, 14, 4, 0, 26], [10, 44, 20, 46, 53], [7, 49, 51, 13, 29], [12, 28, 6, 48, 50],
	
	[35, 57, 56], [33, 35, 56], [35, 33, 37], [37, 19, 35], [37, 27, 19], [27, 1, 19], [1, 25, 19], [1, 9, 25], [9, 17, 25], [25, 17, 31], [17, 59, 31], [31, 32, 57], [31, 59, 32], [32, 34, 57], [57, 34, 56], [41, 27, 37], [41, 39, 27], [23, 21, 41], [21, 39, 41], [21, 45, 39], [47, 21, 23], [23, 54, 47], [58, 54, 23], [16, 54, 58], [16, 58, 30], [58, 33, 30], [33, 56, 30], [16, 30, 24], [8, 16, 24], [8, 24, 0], [0, 24, 18], [0, 18, 26], [26, 18, 36], [18, 34, 36], [34, 32, 36], [26, 36, 40], [38, 26, 40], [38, 40, 20], [20, 40, 22], [20, 22, 46], [46, 22, 55], [22, 59, 55], [59, 17, 55], [1, 5, 9], [5, 3, 9], [15, 29, 5], [5, 29, 3], [3, 29, 13], [3, 13, 43], [13, 53, 43], [43, 46, 55], [43, 53, 46], [39, 45, 15], [45, 7, 15], [15, 7, 29], [47, 54, 42], [47, 42, 52], [52, 42, 12], [42, 2, 12], [2, 28, 12], [2, 8, 4], [8, 0, 4], [2, 4, 28], [28, 4, 14], [6, 28, 14], [45, 11, 7], [7, 11, 49], [11, 52, 50], [50, 52, 12], [11, 50, 49], [49, 50, 48], [49, 48, 51], [13, 51, 53], [51, 10, 53], [51, 48, 10], [48, 6, 10], [10, 6, 44], [6, 14, 44], [14, 38, 44], [44, 38, 20]
];
FACES_SNUB_DODECAHEDRON_DEXTRO = 
[
	[19, 35, 57, 31, 25], [24, 18, 34, 56, 30], [23, 58, 33, 37, 41], [27, 1, 5, 15, 39], [17, 55, 43, 3, 9], [32, 36, 40, 22, 59], [21, 45, 11, 52, 47], [16, 54, 42, 2, 8], [38, 26, 0, 4, 14], [10, 53, 46, 20, 44], [7, 29, 13, 51, 49], [12, 50, 48, 6, 28],
	
	[35, 56, 57], [33, 56, 35], [35, 37, 33], [37, 35, 19], [37, 19, 27], [27, 19, 1], [1, 19, 25], [1, 25, 9], [9, 25, 17], [25, 31, 17], [17, 31, 59], [31, 57, 32], [31, 32, 59], [32, 57, 34], [57, 56, 34], [41, 37, 27], [41, 27, 39], [23, 41, 21], [21, 41, 39], [21, 39, 45], [47, 23, 21], [23, 47, 54], [58, 23, 54], [16, 58, 54], [16, 30, 58], [58, 30, 33], [33, 30, 56], [16, 24, 30], [8, 24, 16], [8, 0, 24], [0, 18, 24], [0, 26, 18], [26, 36, 18], [18, 36, 34], [34, 36, 32], [26, 40, 36], [38, 40, 26], [38, 20, 40], [20, 22, 40], [20, 46, 22], [46, 55, 22], [22, 55, 59], [59, 55, 17], [1, 9, 5], [5, 9, 3], [15, 5, 29], [5, 3, 29], [3, 13, 29], [3, 43, 13], [13, 43, 53], [43, 55, 46], [43, 46, 53], [39, 15, 45], [45, 15, 7], [15, 29, 7], [47, 42, 54], [47, 52, 42], [52, 12, 42], [42, 12, 2], [2, 12, 28], [2, 4, 8], [8, 4, 0], [2, 28, 4], [28, 14, 4], [6, 14, 28], [45, 7, 11], [7, 49, 11], [11, 50, 52], [50, 12, 52], [11, 49, 50], [49, 48, 50], [49, 51, 48], [13, 53, 51], [51, 53, 10], [51, 10, 48], [48, 10, 6], [10, 44, 6], [6, 44, 14], [14, 44, 38], [44, 20, 38]
];
CIRCUMRADIUS_SNUB_DODECAHEDRON = 2.155837375115640;